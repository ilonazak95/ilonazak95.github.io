/*selektor uniwersalny- wszystkie elementyna stronie */
* {
    margin: 0;
    padding: 0;
}

/*selektor elementu - lapie wszystkie podane jako selektor elementu na stronie*/
p {
    font-size: 30px;
}

/*selektor identyfikatora - lapie elememt o okreslonym id w kodzie html*/
#testowy {
    background-color: aqua;
}

/*selektor klasy -lapie elementy o okreslonej klasie z kodu html*/
.testowy-inner {
    color: green;
    font-size: 36;
}

/*selektor potomka lapie wszystkich potomkow okreslonych przez selektor PO SPACJI, niezaleznie od poziomu zagniezdzenia*/
#selektor-potomka p {
    font-size: 48px;
    color: red;
}

/*selektor dziecka/bezposredniego potomka lapie elementy na BEZPOSREDNIM poziomie zagniezdzenia (1 w dol)*/
#selektor-dziecka > p {
    font-size: 40px;
    color: violet;
}

/* selektor brata/braci - lapie elementy BEZPOSREDNIO PO elemencie poprzedzajacym, na tym samym poziomie zagniezdzenia*/
#selektor-braci span + p {
    color: black;
    background-color: aqua;
}

/*pseudoelementy before/after NIE ISTNIEJA bez ustawionej wlasciwosci CONTENT(moze byc ona pusta), after i before NALEZA do elementu*/
#pseudoelementy h1::before {
    content: 'lorem';
    color: red;
}

#pseudoelementy h1::after {
    content: ' lorem';
    color: green;
}

/*pseudoelement first-letter*/
#pseudoelementy h1::first-letter {
    color: yellow;
}

/*pseudoelement first-line lapie cala pierwsza linie podanego selektora*/
#pseudoelementy .first-line::first-line {
    color: chocolate;
}

/*pseuklasy linkow*/
/*pseudoklasa :link sluzy do stylowania nieodwiedzonych linkow*/
#linki a:link {
    color: grey;
}
/*pseudoklasa :visited sluzy do stylowania odwiedzonych linkow*/
#linki a:visited {
    color: pink;
}

/*psedoklasa :hover po najechaniu myszka na element*/
#linki a:hover {
    color: red;
}

/*pseudoklasa :active kedy trzymamy LPM lewy przycisk myszy na elemencie*/
#linki a:active {
    color: orange;
}

/*pseudoklasa :focus kiedy uzupelniamy inputy, textarea*/
#inputy input {
    width: 99%;
    margin-bottom: 20px;
}
#inputy input:focus {
    border: 3px solid red;
}

/*pseudoklasa :target okresla co ma sie stac z elementem, do ktorego prowadzi KOTWICA (link z okresolnym ID elementu)*/
:target {
    border: 1px solid black;
}
/*pseudoklasa :lang (nazwa_jezyka) okresla odwolanie do elementu z atrybutem lang o okreslonej nazwie jezyka*/
div {
    background-color: grey;
}
div:lang(pl) {
    background-color: yellow;
}

/*first-child/last-child - wybieraja pierwszy i ostatni elemenet z okreslonego selektora*/
#lista-dzieci ul .list-item {
    font-size: 20px;
    color: green;
}
#lista-dzieci ul .list-item:first-child {
    font-size: 30px;
    color: red;
}

#lista-dzieci ul .list-item:last-child {
    font-size: 30px;
    color: blue;
}

/*psedoklasa :only-child ,lapie element, ktory jest JEDYNYM DZIECKIEM/POTOMKIEM elementu nadrzednego*/
#jedyne-dziecko span:only-child {
    font-style: italic;
    font-size: 30px;
    color: green;
}
/*pseudoklasa :empty okresla element ktory nie posiada ZADNEGO CONTENTU */
div:empty {
    display: block;
    width: 300px;
    height: 300px;
    background-color: red;
}

/*pseudoklasy :nth-child() i :nth-last-child () sluza do okreslania elementow dzieci,mozemy wskazac konretne dziecko, parzyste/nieparzyste dzieci lub utworzyc wzor, ktore dzieci i co ile maja byc wybierane*/

#kontener .inner {
        display: inline-block;
        height: 300px;
        width: 33%;
        background-color: red;
        margin-bottom: 20px;
        float: left;
        margin-right: 0.5%;
}
/*
#kontener .inner:nth-child(3),
#kontener .inner:nth-child(6) {
    margin-right: 0;
}
*/

#kontener .inner:nth-child(3n+3) {
    margin-right: 0;
}

#kontener .inner:nth-child(even) {
    background-color: yellow;
}

.clear {
    clear: both;
    display: block;
    width: 100%;
}
/*selektory atrybut√≥w*/
/*selector[attr]- okresla elementy, ktore maja atrybut attr, niezaleznie od ich wartosci*/

input[type] {
    background-color: green;
}
/*selector[attr="val"] okresla elementy, ktore posiadaja atrybut attr o okreslonej wartosci "val"*/
input[type="tel"] {
    background-color: red;
}

/*selector[attr~="val"]okresla element, ktory posiada atrybut, ktory w wartosci posiada dany ciag znakow (dokladnie taki sam!)*/
input[type~="opis"] {
    background-color: black;
}
/*selector[attr*="val"] - okresla element, ktory w atrybucie POSIADA WYSTAPIENIE ciagu znakow (nie musi byc dokladny)*/
input[type*="pia"] {
    background-color: blue;
}
/*selector[attr^="val"] okresla elementy ktorych atrybut ROZPOCZYNA SIE PODANYM CIAGIEM ZNAKOW*/
/*np. <input type="poczatek text"*/
input[type^="pocz"] {
    background-color: violet;
}
/*selector[attr$="val"] okresla elementy ktorych atrybut KONCZY SIE PODANYM CIAGIEM ZNAKOW*/
/*np. <input type="text piaty koniec"*/
input[type$="koniec"] {
    background-color: blue;
}


